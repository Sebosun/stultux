package main

import (
	"database/sql"
	"fmt"
	"log"
	"net/http"
	"os"

	"github.com/labstack/echo/v4"
	_ "github.com/lib/pq"
	"github.com/swaggo/echo-swagger" // echo-swagger middleware

	_ "github.com/sebosun/stultux/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/sebosun/stultux/internal/database"
)

func RunServer() {
	dbURL := os.Getenv("DB_URL")
	port := os.Getenv("PORT")
	db, err := sql.Open("postgres", dbURL)

	if err != nil {
		log.Fatal(" error opening connection to the database: ", err)
	}

	database.New(db)

	if port == "" {
		log.Fatal("PORT environment variable is not set")
	}

	e := echo.New()

	e.GET("/swagger/*", echoSwagger.WrapHandler)

	e.GET("/hello", HelloHandler)

	portFormatted := fmt.Sprintf(":%s", port)
	e.Logger.Fatal(e.Start(portFormatted))
}

// HelloHandler godoc
// @Summary Returns a simple greeting
// @Description This endpoint returns a simple hello message
// @Tags example
// @Accept json
// @Produce json
// @Success 200 {object} map[string]string
// @Router /hello [get]
func HelloHandler(c echo.Context) error {
	return c.JSON(http.StatusOK, map[string]string{"message": "Hello, World!"})
}
