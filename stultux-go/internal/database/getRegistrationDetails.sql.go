// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: getRegistrationDetails.sql

package database

import (
	"context"
)

const getRegistrationDetails = `-- name: GetRegistrationDetails :many
SELECT 
    n.name AS first_name,
    l.name AS last_name,
    p.password
FROM 
    available_names n
CROSS JOIN 
    available_last l
CROSS JOIN 
    available_passwords p
`

type GetRegistrationDetailsRow struct {
	FirstName string
	LastName  string
	Password  string
}

func (q *Queries) GetRegistrationDetails(ctx context.Context) ([]GetRegistrationDetailsRow, error) {
	rows, err := q.db.QueryContext(ctx, getRegistrationDetails)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetRegistrationDetailsRow
	for rows.Next() {
		var i GetRegistrationDetailsRow
		if err := rows.Scan(&i.FirstName, &i.LastName, &i.Password); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
