// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: getRegistrationDetails.sql

package database

import (
	"context"
)

const getLastNames = `-- name: GetLastNames :many
SELECT
    name
FROM
    available_last
`

func (q *Queries) GetLastNames(ctx context.Context) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getLastNames)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var name string
		if err := rows.Scan(&name); err != nil {
			return nil, err
		}
		items = append(items, name)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getNames = `-- name: GetNames :many
SELECT
    name
FROM
    available_names
`

func (q *Queries) GetNames(ctx context.Context) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getNames)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var name string
		if err := rows.Scan(&name); err != nil {
			return nil, err
		}
		items = append(items, name)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getPasswords = `-- name: GetPasswords :many
SELECT
    password
FROM
    available_passwords
`

func (q *Queries) GetPasswords(ctx context.Context) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getPasswords)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var password string
		if err := rows.Scan(&password); err != nil {
			return nil, err
		}
		items = append(items, password)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
